<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="zroc__bits_8h" kind="file" language="C++">
    <compoundname>zroc_bits.h</compoundname>
    <includes refid="base__types_8h" local="yes">zroc/base_types.h</includes>
    <incdepgraph>
      <node id="2">
        <label>zroc/base_types.h</label>
        <link refid="base__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/zroc/bits/zroc_bits.h</label>
        <link refid="zroc__bits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="zroc__bits_8h_1ae4977b84f5c59e02c5ccc94de0b45f68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
        <definition>static usize bit</definition>
        <argsstring>(u8 n)</argsstring>
        <name>bit</name>
        <param>
          <type><ref refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/bits/zroc_bits.h" line="5" column="21" bodyfile="include/zroc/bits/zroc_bits.h" bodystart="5" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="zroc__bits_8h_1a329aa232daedf19f832124f737a68a31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void set_bit</definition>
        <argsstring>(usize *v, usize b)</argsstring>
        <name>set_bit</name>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/bits/zroc_bits.h" line="6" column="20" bodyfile="include/zroc/bits/zroc_bits.h" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="zroc__bits_8h_1a2f031713071b8843525f0d56117ba348" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clear_bit</definition>
        <argsstring>(usize *v, usize b)</argsstring>
        <name>clear_bit</name>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/bits/zroc_bits.h" line="7" column="20" bodyfile="include/zroc/bits/zroc_bits.h" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="zroc__bits_8h_1a55569b40e2136136402e9b96ea066ae1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void toggle_bit</definition>
        <argsstring>(usize *v, usize b)</argsstring>
        <name>toggle_bit</name>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/bits/zroc_bits.h" line="8" column="20" bodyfile="include/zroc/bits/zroc_bits.h" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="zroc__bits_8h_1aaa7e6074dbd4cfc053f033452a2caf11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base__types_8h_1af29b166bf5fea7f0bbc07f7014a8c6b5" kindref="member">boolean</ref></type>
        <definition>static boolean check_bit</definition>
        <argsstring>(usize v, usize b)</argsstring>
        <name>check_bit</name>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/bits/zroc_bits.h" line="9" column="23" bodyfile="include/zroc/bits/zroc_bits.h" bodystart="9" bodyend="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base__types_8h" kindref="compound">zroc/base_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>bit(<ref refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref><sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref>)1)<sp/>&lt;&lt;<sp/>n;<sp/>};</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_bit(<ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>*v,<sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>b)<sp/>{<sp/>*v<sp/>|=<sp/>b;<sp/>};</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear_bit(<ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>*v,<sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>b)<sp/>{<sp/>*v<sp/>&amp;=<sp/>~b;<sp/>};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toggle_bit(<ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>*v,<sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>b)<sp/>{<sp/>*v<sp/>^=<sp/>b;<sp/>};</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>check_bit(<ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>v,<sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&amp;<sp/>b)<sp/>!=<sp/>0;<sp/>};</highlight></codeline>
    </programlisting>
    <location file="include/zroc/bits/zroc_bits.h"/>
  </compounddef>
</doxygen>
