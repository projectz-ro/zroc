<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="base__types_8h" kind="file" language="C++">
    <compoundname>base_types.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="zroc__bits_8h" local="yes">include/zroc/bits/zroc_bits.h</includedby>
    <includedby refid="zroc__mem__sizes_8h" local="yes">include/zroc/memory/zroc_mem_sizes.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/zroc/base_types.h</label>
        <link refid="base__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/zroc/base_types.h</label>
        <link refid="base__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/zroc/bits/zroc_bits.h</label>
        <link refid="zroc__bits_8h"/>
      </node>
      <node id="3">
        <label>include/zroc/memory/zroc_mem_sizes.h</label>
        <link refid="zroc__mem__sizes_8h"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t u8</definition>
        <argsstring></argsstring>
        <name>u8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="7" column="17" bodyfile="include/zroc/base_types.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1ae3702327b5f47e83b431e22b33da7b58" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t i8</definition>
        <argsstring></argsstring>
        <name>i8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="8" column="16" bodyfile="include/zroc/base_types.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1ace9d960e74685e2cd84b36132dbbf8aa" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t u16</definition>
        <argsstring></argsstring>
        <name>u16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="9" column="18" bodyfile="include/zroc/base_types.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1ad309dbcaeea13aa602d686964156ea0b" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t i16</definition>
        <argsstring></argsstring>
        <name>i16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="10" column="17" bodyfile="include/zroc/base_types.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1afaa62991928fb9fb18ff0db62a040aba" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t u32</definition>
        <argsstring></argsstring>
        <name>u32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="11" column="18" bodyfile="include/zroc/base_types.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t i32</definition>
        <argsstring></argsstring>
        <name>i32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="12" column="17" bodyfile="include/zroc/base_types.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t u64</definition>
        <argsstring></argsstring>
        <name>u64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="13" column="18" bodyfile="include/zroc/base_types.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t i64</definition>
        <argsstring></argsstring>
        <name>i64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="14" column="17" bodyfile="include/zroc/base_types.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t usize</definition>
        <argsstring></argsstring>
        <name>usize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="16" column="16" bodyfile="include/zroc/base_types.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a2992909b9c1ee26479af8fa433d4479f" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t isize</definition>
        <argsstring></argsstring>
        <name>isize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="17" column="19" bodyfile="include/zroc/base_types.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a5f6906312a689f27d70e9d086649d3fd" prot="public" static="no">
        <type>float</type>
        <definition>typedef float f32</definition>
        <argsstring></argsstring>
        <name>f32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="19" column="15" bodyfile="include/zroc/base_types.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a94dab5770726ccbef8c7d026cfbdf8e5" prot="public" static="no">
        <type>double</type>
        <definition>typedef double f64</definition>
        <argsstring></argsstring>
        <name>f64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="20" column="16" bodyfile="include/zroc/base_types.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1af29b166bf5fea7f0bbc07f7014a8c6b5" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool boolean</definition>
        <argsstring></argsstring>
        <name>boolean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="22" column="14" bodyfile="include/zroc/base_types.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1a8fa5a7ddaf7b4d44d3dde63343d8d844" prot="public" static="no">
        <type>const char *</type>
        <definition>typedef const char* cstr</definition>
        <argsstring></argsstring>
        <name>cstr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="24" column="20" bodyfile="include/zroc/base_types.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base__types_8h_1ab862f2d862051450cf946971b59176da" prot="public" static="no">
        <type><ref refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
        <definition>typedef u8 byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/zroc/base_types.h" line="25" column="12" bodyfile="include/zroc/base_types.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref>;</highlight></codeline>
<codeline lineno="8" refid="base__types_8h_1ae3702327b5f47e83b431e22b33da7b58" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="base__types_8h_1ae3702327b5f47e83b431e22b33da7b58" kindref="member">i8</ref>;</highlight></codeline>
<codeline lineno="9" refid="base__types_8h_1ace9d960e74685e2cd84b36132dbbf8aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="base__types_8h_1ace9d960e74685e2cd84b36132dbbf8aa" kindref="member">u16</ref>;</highlight></codeline>
<codeline lineno="10" refid="base__types_8h_1ad309dbcaeea13aa602d686964156ea0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="base__types_8h_1ad309dbcaeea13aa602d686964156ea0b" kindref="member">i16</ref>;</highlight></codeline>
<codeline lineno="11" refid="base__types_8h_1afaa62991928fb9fb18ff0db62a040aba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="base__types_8h_1afaa62991928fb9fb18ff0db62a040aba" kindref="member">u32</ref>;</highlight></codeline>
<codeline lineno="12" refid="base__types_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="base__types_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec" kindref="member">i32</ref>;</highlight></codeline>
<codeline lineno="13" refid="base__types_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="base__types_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234" kindref="member">u64</ref>;</highlight></codeline>
<codeline lineno="14" refid="base__types_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="base__types_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2" kindref="member">i64</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1a5148c9c1252e19e12def2814f71690e3" kindref="member">usize</ref>;</highlight></codeline>
<codeline lineno="17" refid="base__types_8h_1a2992909b9c1ee26479af8fa433d4479f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/><ref refid="base__types_8h_1a2992909b9c1ee26479af8fa433d4479f" kindref="member">isize</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="base__types_8h_1a5f6906312a689f27d70e9d086649d3fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref>;</highlight></codeline>
<codeline lineno="20" refid="base__types_8h_1a94dab5770726ccbef8c7d026cfbdf8e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1a94dab5770726ccbef8c7d026cfbdf8e5" kindref="member">f64</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="base__types_8h_1af29b166bf5fea7f0bbc07f7014a8c6b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1af29b166bf5fea7f0bbc07f7014a8c6b5" kindref="member">boolean</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="base__types_8h_1a8fa5a7ddaf7b4d44d3dde63343d8d844" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="base__types_8h_1a8fa5a7ddaf7b4d44d3dde63343d8d844" kindref="member">cstr</ref>;</highlight></codeline>
<codeline lineno="25" refid="base__types_8h_1ab862f2d862051450cf946971b59176da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="base__types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref><sp/><ref refid="base__types_8h_1ab862f2d862051450cf946971b59176da" kindref="member">byte</ref>;</highlight></codeline>
    </programlisting>
    <location file="include/zroc/base_types.h"/>
  </compounddef>
</doxygen>
