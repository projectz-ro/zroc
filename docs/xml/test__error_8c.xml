<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="test__error_8c" kind="file" language="C++">
    <compoundname>test_error.c</compoundname>
    <includes local="no">criterion/criterion.h</includes>
    <includes refid="zroc_8h" local="no">zroc/zroc.h</includes>
    <incdepgraph>
      <node id="4">
        <label>error/zroc_error.h</label>
        <link refid="zroc__error_8h"/>
      </node>
      <node id="5">
        <label>log/zroc_log.h</label>
        <link refid="zroc__log_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zroc/zroc.h</label>
        <link refid="zroc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/test_error.c</label>
        <link refid="test__error_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>criterion/criterion.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__error_8c_1ada1be933463107026f52ac9e21ebae84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(error, err_str_returns_string)</argsstring>
        <name>Test</name>
        <param>
          <type>error</type>
        </param>
        <param>
          <type>err_str_returns_string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_error.c" line="4" column="1" bodyfile="tests/test_error.c" bodystart="4" bodyend="7"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;criterion/criterion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zroc_8h" kindref="compound">zroc/zroc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="test__error_8c_1ada1be933463107026f52ac9e21ebae84" kindref="member">Test</ref>(error,<sp/>err_str_returns_string)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>cr_assert_str_eq(<ref refid="zroc__error_8h_1a96378867528909109f97e49d2d7667aa" kindref="member">zroc_err_str</ref>(<ref refid="zroc__error_8h_1a5aeb0f60d8232ba923a2d1ef96b8a8ada9a759b6562ff61139b10b6220d06bffe" kindref="member">ZROC_OK</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>cr_assert_str_eq(<ref refid="zroc__error_8h_1a96378867528909109f97e49d2d7667aa" kindref="member">zroc_err_str</ref>(<ref refid="zroc__error_8h_1a5aeb0f60d8232ba923a2d1ef96b8a8adaf33a4679cea63d39ff3ee04c0875cc96" kindref="member">ZROC_ERR_INVALID_ARG</ref>),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/test_error.c"/>
  </compounddef>
</doxygen>
